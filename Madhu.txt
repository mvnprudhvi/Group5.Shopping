USE MADHU
 
create table Items(itno int primary key,itname varchar(10)Not Null,Type char(1) check (Type in ('n','r','c','o')),Fees smallmoney Not Null)
insert into Items values(101 , 'Nuts','n' ,500),
                        (102 , 'Rice','r' ,1000),
						(103 , 'Cosmotics','c',1500),
						(104 , 'Others','o',2000)

create table Shops(Sid int primary key,Sname varchar(10)Not Null,Location varchar(10) Not Null)
insert into Shops values(1,'SH1','Hyderabad'),
                        (2,'SH2','Warangal'),
						(3,'SH3','Warangal'),
						(4,'SH4','Hyderabad')
						

create table Customers(Cid int primary key,itno int foreign key references Items(itno),Sid int foreign key references Shops(Sid),Cname varchar(10))
insert into Customers values(10,101,1,'PRUDHVI'),
                            (20,101,1,'KEERTHANA'),
							(30,102,2,'MADHUMITHA'),
							(40,102,2,'RESHMA'),
							(50,103,3,'DHINESH'), 
							(60,103,4,'ASHRITHA'),
							(70,104,4,'SURESH')
select * from Shops
select * from Items
select * from Customers

--1)LIST THE ITEMS DETAILS WHICH ITEM IS SELECTED ATLEAST ONE CUSTOMER
select * from items i where exists(select 1 from customers where itno=i.ino)


--2)LIST THE ITEMS,CUSTOMERS,SHOP DETAILS WITH CROSS PRODUCT
select * from items cross join shops,customers

--3)LIST ALL ITEMS DETAILS WITH SHOPID CID DETAILS ,IF THE ITEM ID MATCH CUSTOMERS,ITEMS TABLE
select i.* ,s.Sid ,c.Cid from Items i,Shops s,Customers c where i.itno=c.itno
----(or)-----
select i.*, c.cid,s.Sid   from Items i inner join  Customers c on i.itno = c.itno inner join Shops s on c.Sid = s.Sid

--4)LIST 'C','R' TYPE DETAILS WHOSE PRICE IS ABOVE 500
select * from Items where Type ='c' or Type='r' and Fees > 500
--(OR)-----
select * from Items where Type IN('c','r') and  Fees >500

--5)Make a cursor to get all item details.
DECLARE @S1 INT,@S2 VARCHAR(1),@S3 CHAR(1), @S4 SMALLMONEY
DECLARE C1 CURSOR FOR SELECT * FROM ITEMS
OPEN 
FETCH NEXT FROM C1 INTO @S1,@S2,@S3 ,@S4 --START THE LOOP
WHILE (@@FETCH_STATUS=0)
BEGIN
PRINT CAST(@S1 AS VARCHAR)+'   '+@S2+'   '+@S3+'   '+ CAST (@S4 AS VARCHAR)
FETCH NEXT FROM C1 INTO @S1,@S2,@S3,@S4 --CONTINUE THE LOOP
END
CLOSE C1
DEALLOCATE C1

--6) Create trigger if the items is added into items table other than ‘n’[nuts]?
CREATE TRIGGER tr1
ON ITEMS
instead of insert
AS
BEGIN
declare @it varchar(20)
select @it=itname from inserted
  If @it!='Nuts'   
  BEGIN
    ROLLBACK
    RAISERROR('OTHER ITEMS CANT INSERT,EXCEPT NUTS',1,1)
  END
  end

 insert into items values(106,'coco','c',500)
 --insert into items values(106,'NUTS','N',500)


 --7)To calc shop wise total items,no.of customers?
select Sid Shop,COUNT(*) totalItems,COUNT(*) NoOfCustomers from Customers group by Sid

--8)Adding a new column email in the customer table

CREATE PROC ADDCOL(@TN VARCHAR(20))
AS
BEGIN
  EXEC ('ALTER TABLE '+@TN+' ADD EMAIL VARCHAR(20)')
END

  EXEC ADDCOL CUSTOMERS
   select * from customers

--9)TO PERFORM ALL SET OPERATORS USING CUSTOMERS,ITEMS TABLE?
SELECT ITNO FROM CUSTOMERS UNION SELECT ITNO FROM ITEMS
--write a query for itno from customers,itno from items?
SELECT ITNO FROM CUSTOMERS UNION ALL SELECT ITNO FROM ITEMS
--write a query for itno from customers,itno from items?
SELECT ITNO FROM CUSTOMERS INTERSECT SELECT ITNO FROM ITEMS
--write a query for cname from customers,itname from items?
SELECT CNAME FROM CUSTOMERS EXCEPT SELECT ITNAME FROM  ITEMS


--10)TO MAKE COMPLEX VIEW ON CUSTOMERS,SHOPS TABLE?
CREATE VIEW CS AS SELECT CUSTOMERS.CID,SHOPS.SID FROM CUSTOMERS,SHOPS WHERE CUSTOMERS.SID=SHOPS.SID
SELECT * FROM CS
