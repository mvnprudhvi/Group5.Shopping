create table Items(itno int primary key,itname varchar(10)Not Null,Type char(1) check (Type in ('n','r','c','o')),Fees smallmoney Not Null)
insert into Items values(101 , 'Nuts','n' ,500),
                        (102 , 'Rice','r' ,1000),
						(103 , 'Cosmotics','c',1500),
						(104 , 'Others','o',2000)

create table Shops(Sid int primary key,Sname varchar(10)Not Null,Location varchar(10) Not Null)
insert into Shops values(1,'SH1','Hyderabad'),
                        (2,'SH2','Warangal'),
						(3,'SH3','Warangal'),
						(4,'SH4','Hyderabad')
						

create table Customers2(Cid int primary key,itno int foreign key references Items(itno),Sid int foreign key references Shops(Sid),Cname varchar(10))
insert into Customers2 values(10,101,1,'PRUDHVI'),
                            (20,101,1,'KEERTHANA'),
							(30,102,2,'MADHUMITHA'),
							(40,102,2,'RESHMA'),
							(50,103,3,'DHINESH'), 
							(60,103,4,'ASHRITHA'),
							(70,104,4,'SURESH')
select * from Shops
select * from Items
select * from Customers
--1)List the item details whi9ch item is selected atleast one customer
Select * from items i where exists(select 1 from customers2 where itno=i.itno)
--2)List the items,customers2,shops details with cross product
select * from items cross join shops,customers2
---3)List all items details with shopid cid details ,if the item id match customers ,items table-----
select i.* ,s.Sid ,c.Cid from Items i,Shops s,Customers2 c where i.itno=c.itno
----(or)-----
select i.*, c.cid,s.Sid   from Items i inner join  Customers2 c on i.itno = c.itno inner join Shops s on c.Sid = s.Sid

----4)list 'c','r' type details whose Fees is above 500----

select * from Items where Type ='c' or Type='r' and Fees > 500
--(OR)-----
select * from Items where Type IN('c','r') and  Fees >500

----5)Make a cursor to get all item details.------
DECLARE @S1 INT,@S2 VARCHAR(1),@S3 CHAR(1), @S4 SMALLMONEY
DECLARE C1 CURSOR FOR SELECT * FROM ITEMS
OPEN C1
FETCH NEXT FROM C1 INTO @S1,@S2,@S3 ,@S4 --START THE LOOP
WHILE (@@FETCH_STATUS=0)
BEGIN
PRINT CAST(@S1 AS VARCHAR)+'   '+@S2+'   '+@S3+'   '+ CAST (@S4 AS VARCHAR)
FETCH NEXT FROM C1 INTO @S1,@S2,@S3,@S4 --CONTINUE THE LOOP
END
CLOSE C1
DEALLOCATE C1
--6) Create trigger if the items is added into items table other than ‘n’[nuts]?
CREATE TRIGGER tr1
ON ITEMS
instead of insert
AS
BEGIN
declare @it varchar(20)
select @it=itname from inserted
  If @it!='Nuts'   
  BEGIN
    ROLLBACK
    RAISERROR('OTHER ITEMS CANT INSERT,EXCEPT NUTS',1,1)
  END
  end

 insert into items values(106,'coco','c',500)
 insert into items values(106,'NUTS','N',500)

---7)To calc shop wise total items,no.of customers ?----

select Sid Shops,COUNT(*) totalItems,COUNT(*) NoOfCustomers from Customers2 group by Sid


-----8)Add the new column ‘email’ into Customers table using dynamic query procedure?----

  create proc at(@t varchar(10))
  as 
  begin
  exec('alter table' +@t+'add email varchar(20)')
  end
  exec at customers2
  select * from customers2

--9)TO PERFORM ALL SET OPERATORS USING CUSTOMERS,ITEMS TABLE?
--UNION
SELECT ITNO FROM CUSTOMERS2 UNION SELECT ITNO FROM ITEMS
--UNION ALL
SELECT ITNO FROM CUSTOMERS2 UNION ALL SELECT ITNO FROM ITEMS
--INSERECT
SELECT ITNO FROM CUSTOMERS2 INTERSECT SELECT ITNO FROM ITEMS
--EXCEPT
SELECT CNAME FROM CUSTOMERS2 EXCEPT SELECT ITNAME FROM  ITEMS
--10)TO MAKE COMPLEX VIEW ON CUSTOMERS,SHOPS TABLE?
CREATE VIEW CS AS SELECT CUSTOMERS2.CID,SHOPS.SID FROM CUSTOMERS2,SHOPS WHERE CUSTOMERS2.SID=SHOPS.SID
SELECT * FROM CS